# Wakeup Light
- alias: WakeUp Light Bedroom
  id: '1516469487030'
  hide_entity: true
  trigger:
    platform: template
    value_template: '{{states.sensor.time.state == states.sensor.wakeup_start_time_lights.state}}'
  condition:
    - condition: state
      entity_id: input_boolean.wakeup
      state: 'on'
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.wakeup_weekends
          state: 'on'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
  action:
    service: script.wakeup_bedroom

# Turn lights on on weekday mornings
- alias: Weekday Morning On
  action:
    service: script.scene_morning
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  id: '1517158114659'
  trigger:
    - at: 05:30
      platform: time

# Turn everything off when the last person leaves on weekdays
- alias: Weekday Morning Off
  action:
    - data:
        entity_id:
          - light.tak_1
          - light.tak_2
          - light.tak_3
          - light.hue_vardagsrum
          - light.hue_sovrum
      service: light.turn_off
    - data:
        entity_id:
          - switch.plant_light
          - switch.cupboard_light
      service: switch.turn_off
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  id: '1517160306581'
  trigger:
    - platform: state
      entity_id: group.all_devices
      to: not_home

# Turn the light on when someone comes home
- alias: Evening Light On
  action:
    - data: {}
      service: script.scene_evening
    - service: switch.turn_on
      data:
        entity_id: switch.fluxer
  id: '1517169567056'
  trigger:
    - platform: state
      entity_id: device_tracker.alberts_iphone, device_tracker.astrid_sin_iphone
      from: not_home
      to: 'home'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: device_tracker.astrid_sin_iphone
        state: not_home
      - condition: state
        entity_id: device_tracker.alberts_iphone
        state: not_home

# Start heating in the morning
- alias: Heating Morning On
  action:
    - data:
        entity_id: switch.heater_livingroom
      service: switch.turn_on
  condition:
    - condition: state
      entity_id: input_boolean.heating
      state: 'on'
  id: '1517551858893'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.heating_mortning_start.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"

# Stop heating in the morning
- alias: Heating Morning Off
  action:
    - data:
        entity_id: switch.heater_livingroom
      service: switch.turn_off
  condition:
    - condition: state
      entity_id: input_boolean.heating
      state: 'on'
  id: '1517551936701'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.heating_mortning_end.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"

# Start heating in the evening
- alias: Heating Evening On
  action:
    - data:
        entity_id: switch.heater_livingroom
      service: switch.turn_on
  condition:
    - condition: state
      entity_id: input_boolean.heating
      state: 'on'
  id: '1517551977011'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.heating_evening_start.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"

# Stop heating in the evening
- alias: Heating Evening Off
  id: '1517552024666'
  action:
    - data:
        entity_id: switch.heater_livingroom
      service: switch.turn_off
  condition:
    - condition: state
      entity_id: input_boolean.heating
      state: 'on'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.heating_evening_end.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"

# Change wakeup time
- alias: Move Wakeup
  id: '1520145586600'
  action:
    - data_template:
        entity_id: input_number.wakeup_hour
        value: '{{trigger["payload_json"]["alarm_time"][0]}}'
      service: input_number.set_value
    - data_template:
        entity_id: input_number.wakeup_minutes
        value: '{{trigger["payload_json"]["alarm_time"][1]}}'
      service: input_number.set_value

  trigger:
    platform: mqtt
    topic: "alarm_clock"

# Disable wakeup
- alias: Disable Wakeup
  id: '1520145586601'
  action:
    - data:
        entity_id: input_boolean.wakeup
      service: input_boolean.turn_off
  condition:
    - condition: state
      entity_id: input_boolean.wakeup
      state: 'on'
    - condition: template
      value_template: '{{ trigger["payload_json"]["alarm_is_enabled"] == false }}'
  trigger:
    platform: mqtt
    topic: "alarm_clock"

# Enable wakeup
- alias: Enable Wakeup
  id: '1520145586602'
  action:
    - data:
        entity_id: input_boolean.wakeup
      service: input_boolean.turn_on
  condition:
    - condition: state
      entity_id: input_boolean.wakeup
      state: 'off'
    - condition: template
      value_template: '{{ trigger["payload_json"]["alarm_is_enabled"] == true }}'
  trigger:
    platform: mqtt
    topic: "alarm_clock"

# Move alarm
# - action:
#   - data_template:
#       topic: alarm_clock/command
#       payload: '{"command":"toggle_alarm"}'
#       retain: false
#     service: mqtt.publish
#   id: '1520145586603'
#   alias: Move Alarm
#   trigger:
#     platform: state
#     entity_id: input_boolean.wakeup

# Start coffee maker
- alias: Start Coffee Maker
  id: '1520145586604'
  action:
    service: script.coffee_trigger
  condition:
    - condition: state
      entity_id: input_boolean.coffee_automation
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.coffee_on_time.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
